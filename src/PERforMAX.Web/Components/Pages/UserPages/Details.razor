@page "/users/details"
@inject PERforMAX.Data.DataContext DB
@using PERforMAX.Domain.Entities
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>User</h4>
    <hr />
    @if (user is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Firstname</dt>
            <dd class="col-sm-10">@user.Firstname</dd>
            <dt class="col-sm-2">Lastname</dt>
            <dd class="col-sm-10">@user.Lastname</dd>
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@user.Email</dd>
            <dt class="col-sm-2">Password</dt>
            <dd class="col-sm-10">@user.Password</dd>
            <dt class="col-sm-2">BirthDate</dt>
            <dd class="col-sm-10">@user.BirthDate</dd>
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@user.CreatedBy</dd>
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@user.UpdatedBy</dd>
            <dt class="col-sm-2">DeletedBy</dt>
            <dd class="col-sm-10">@user.DeletedBy</dd>
            <dt class="col-sm-2">CreationDate</dt>
            <dd class="col-sm-10">@user.CreationDate</dd>
            <dt class="col-sm-2">ModifiedDate</dt>
            <dd class="col-sm-10">@user.ModifiedDate</dd>
            <dt class="col-sm-2">DeleteDate</dt>
            <dd class="col-sm-10">@user.DeleteDate</dd>
        </dl>
        <div>
            <a href="@($"/users/edit?id={user.Id}")">Edit</a> |
            <a href="@($"/users")">Back to List</a>
        </div>
    }
</div>

@code {
    User? user;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        user = await DB.Users.FirstOrDefaultAsync(m => m.Id == Id);

        if (user is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
